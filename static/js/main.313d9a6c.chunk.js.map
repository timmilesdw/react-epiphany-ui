{"version":3,"sources":["../../src/UI/Button.jsx","../../src/HOCs/ThemeProvider.jsx","App.js","index.js"],"names":["Button","onClick","size","color","Btn","styled","props","ETheme","children","theme","defaultTheme","GlobalStyle","createGlobalStyle","fontSizes","space","colors","error","warning","success","main","secondary","buttonSizes","xs","sm","md","lg","default","App","useState","setColor","setSize","event","setEvent","style","display","justifyContent","marginTop","value","onChange","e","target","placeholder","label","ReactDOM","render","document","getElementById"],"mappings":"w6CAGaA,EAAS,SAAC,GAAoC,IAApC,EAAoC,EAApC,QAAoC,EAApC,QAAoC,EAApC,KAAsBC,EAAc,EAAdA,QAC5C,OACC,qBAAKA,QAAL,EAAuBC,KAAvB,EAAmCC,MAAOA,GAD3C,IAOKC,EAAMC,IAAH,mBAGOC,YAAD,OACbA,QAAcA,EAAdA,MAA4BA,eAJrB,QAMLA,YAAD,OACDA,OACGA,cACCA,oBADDA,GAECA,cACAA,oBADAA,GAEAA,cACAA,oBADAA,GAEAA,cACAA,oBADAA,GAEAA,oBATJA,QAUGA,oBAjBL,WCRaC,EAAS,SAAC,GAAwB,IAAxB,EAAwB,EAAxB,MAASC,EAAe,EAAfA,SAC/B,OACC,uBAAeC,MAAOA,GAASC,GAC9B,oBADD,MADD,IAQKC,EAAcC,YAAH,YAMXF,EAAe,CACpBG,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GADpB,IAEpBC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAFT,KAGpBC,OAAQ,CACPC,MADO,UAEPC,QAFO,UAGPC,QAHO,UAIPC,KAJO,UAKPC,UAAW,WAEZC,YAAa,CACZC,GAAI,8EAKJC,GAAI,8EAKJC,GAAI,4GAMJC,GAAI,8EAKJC,QAAS,gFCbIC,EAjCH,WAAO,IAAD,EACUC,qBADV,mBACTzB,EADS,KACF0B,EADE,OAEQD,mBAAS,WAFjB,mBAET1B,EAFS,KAEH4B,EAFG,OAGUF,oBAAS,GAHnB,mBAGTG,EAHS,KAGFC,EAHE,KAIhB,OACE,kBAAC,EAAD,KACE,yBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,eAAgBC,UAAW,QACvE,6BACE,sCACA,2BACEC,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOV,EAASU,EAAEC,OAAOH,QACnCI,YAAY,aAEhB,6BACE,qCACA,2BACEJ,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOH,QAClCI,YAAY,sBAEhB,6BACE,sCACA,6BAAMV,EAAQ,OAAS,WAG3B,yBAAKE,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,UAAW,OACjE,kBAAC,EAAD,CAAQjC,MAAOA,EAAOD,KAAMA,EAAMD,QAAS,kBAAM+B,GAAUD,IAAQW,MAAM,gBC3BjFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.313d9a6c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport const Button = ({ label, color, size, onClick }) => {\n\treturn (\n\t\t<Btn onClick={onClick} size={size} color={color}>\n\t\t\t{label}\n\t\t</Btn>\n\t)\n}\n\nconst Btn = styled.button`\n\tcolor: white;\n\tmix-blend-mode: difference;\n\tbackground: ${(props) =>\n\t\tprops.color ? props.color : props.theme.colors.main};\n\talign-items: center;\n\t${(props) =>\n\t\tprops.size\n\t\t\t? props.size === 'xs'\n\t\t\t\t? props.theme.buttonSizes.xs\n\t\t\t\t: props.size === 'sm'\n\t\t\t\t? props.theme.buttonSizes.sm\n\t\t\t\t: props.size === 'md'\n\t\t\t\t? props.theme.buttonSizes.md\n\t\t\t\t: props.size === 'lg'\n\t\t\t\t? props.theme.buttonSizes.lg\n\t\t\t\t: props.theme.buttonSizes.default\n\t\t\t: props.theme.buttonSizes.default};\n\tborder-radius: 3px;\n\tborder: none;\n\tdisplay: inline-flex;\n\tflex: 0 0 auto;\n\tfont-weight: 500;\n\tjustify-content: center;\n\toutline: 0;\n\tposition: relative;\n\ttext-transform: uppercase;\n\ttext-decoration: none;\n\ttransition: all 0.2s ease;\n\tuser-select: none;\n\tvertical-align: middle;\n\twhite-space: nowrap;\n\tbox-shadow: 0 0 4px #999;\n\tcursor: pointer;\n\t:after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\t\tbackground-image: radial-gradient(circle, #fff 10%, transparent 10.01%);\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: 50%;\n\t\ttransform: scale(10, 10);\n\t\topacity: 0;\n\t\ttransition: transform 0.5s, opacity 1s;\n\t}\n\t:active:after {\n\t\ttransform: scale(0, 0);\n\t\topacity: 0.3;\n\t\ttransition: 0s;\n\t}\n\t:hover:after {\n\t\topacity: 0.2;\n\t}\n`\n","import React from 'react'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\n\nexport const ETheme = ({ theme, children }) => {\n\treturn (\n\t\t<ThemeProvider theme={theme || defaultTheme}>\n\t\t\t<GlobalStyle />\n\t\t\t{children}\n\t\t</ThemeProvider>\n\t)\n}\n\nconst GlobalStyle = createGlobalStyle`\n* {\n\tfont-family: 'Roboto';\n}\n`\n\nconst defaultTheme = {\n\tfontSizes: [12, 14, 16, 18, 24, 32, 36, 72, 96],\n\tspace: [0, 4, 8, 16, 32, 64, 128, 256],\n\tcolors: {\n\t\terror: '#F44336',\n\t\twarning: '#FF9800',\n\t\tsuccess: '#4CAF50',\n\t\tmain: '#2196F3',\n\t\tsecondary: '#212121'\n\t},\n\tbuttonSizes: {\n\t\txs: `\n\t\t\theight: 28px;\n\t\t\tpadding: 0 16px;\n\t\t\tfont-size: 10px;\n\t\t`,\n\t\tsm: `\n\t\t\theight: 30px;\n\t\t\tpadding: 0 24px;\n\t\t\tfont-size: 13px;\n\t\t`,\n\t\tmd: `\n\t\t\theight: 36px;\n\t\t\tpadding: 0 34px;\n\t\t\tfont-size: 14px;\n\t\t\tletter-spacing: 0.4px;\n\t\t`,\n\t\tlg: `\n\t\t\theight: 68px;\n\t\t\tpadding: 0 56px;\n\t\t\tfont-size: 20px;\n\t\t`,\n\t\tdefault: `\n\t\t\theight: 36px;\n\t\t\tpadding: 0 30px;\n\t\t\tfont-size: 13px;\n\t\t`\n\t}\n}\n","import React, { useState } from 'react'\nimport { Button, ETheme } from 'react-epiphany-ui'\n\n\nconst App = () => {\n  const [color, setColor] = useState()\n  const [size, setSize] = useState('default')\n  const [event, setEvent] = useState(false)\n  return(\n    <ETheme>\n      <div style={{display: 'flex', justifyContent: 'space-around', marginTop: '10%'}}>\n        <div>\n          <div>Color</div>\n          <input \n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            placeholder=\"default\"/>\n        </div>\n        <div>\n          <div>Size</div>\n          <input \n            value={size}\n            onChange={(e) => setSize(e.target.value)}\n            placeholder=\"xs, sm, md or lg\"/>\n        </div>\n        <div>\n          <div>Event</div>\n          <div>{event ? 'true' : 'false'}</div>\n        </div>\n      </div>\n      <div style={{display: 'flex', justifyContent: 'center', marginTop: '2%'}}>\n        <Button color={color} size={size} onClick={() => setEvent(!event)} label=\"press me\"/>\n      </div>\n    </ETheme>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}